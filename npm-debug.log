0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/nodejs',
1 verbose cli   '/usr/bin/npm',
1 verbose cli   'install',
1 verbose cli   'pm2@latest',
1 verbose cli   '-g' ]
2 info using npm@1.3.10
3 info using node@v0.10.25
4 verbose cache add [ 'pm2@latest', null ]
5 verbose cache add name=undefined spec="pm2@latest" args=["pm2@latest",null]
6 verbose parsed url { protocol: null,
6 verbose parsed url   slashes: null,
6 verbose parsed url   auth: null,
6 verbose parsed url   host: null,
6 verbose parsed url   port: null,
6 verbose parsed url   hostname: null,
6 verbose parsed url   hash: null,
6 verbose parsed url   search: null,
6 verbose parsed url   query: null,
6 verbose parsed url   pathname: 'pm2@latest',
6 verbose parsed url   path: 'pm2@latest',
6 verbose parsed url   href: 'pm2@latest' }
7 verbose cache add name="pm2" spec="latest" args=["pm2","latest"]
8 verbose parsed url { protocol: null,
8 verbose parsed url   slashes: null,
8 verbose parsed url   auth: null,
8 verbose parsed url   host: null,
8 verbose parsed url   port: null,
8 verbose parsed url   hostname: null,
8 verbose parsed url   hash: null,
8 verbose parsed url   search: null,
8 verbose parsed url   query: null,
8 verbose parsed url   pathname: 'latest',
8 verbose parsed url   path: 'latest',
8 verbose parsed url   href: 'latest' }
9 verbose addNamed [ 'pm2', 'latest' ]
10 verbose addNamed [ null, null ]
11 silly lockFile 616a5678-pm2-latest pm2@latest
12 verbose lock pm2@latest /home/max/.npm/616a5678-pm2-latest.lock
13 info addNameTag [ 'pm2', 'latest' ]
14 verbose url raw pm2
15 verbose url resolving [ 'https://registry.npmjs.org/', './pm2' ]
16 verbose url resolved https://registry.npmjs.org/pm2
17 info trying registry request attempt 1 at 16:50:06
18 verbose etag "7V49K3F9K5AMH6WELUGPQ80V1"
19 http GET https://registry.npmjs.org/pm2
20 http 304 https://registry.npmjs.org/pm2
21 silly registry.get cb [ 304,
21 silly registry.get   { date: 'Wed, 24 Feb 2016 22:50:06 GMT',
21 silly registry.get     via: '1.1 varnish',
21 silly registry.get     'cache-control': 'max-age=300',
21 silly registry.get     etag: '"7V49K3F9K5AMH6WELUGPQ80V1"',
21 silly registry.get     age: '9',
21 silly registry.get     connection: 'keep-alive',
21 silly registry.get     'x-served-by': 'cache-dfw1835-DFW',
21 silly registry.get     'x-cache': 'HIT',
21 silly registry.get     'x-cache-hits': '2',
21 silly registry.get     'x-timer': 'S1456354206.632724,VS0,VE0',
21 silly registry.get     vary: 'Accept' } ]
22 verbose etag pm2 from cache
23 verbose addNamed [ 'pm2', '1.0.1' ]
24 verbose addNamed [ '1.0.1', '1.0.1' ]
25 silly lockFile ec149a27-pm2-1-0-1 pm2@1.0.1
26 verbose lock pm2@1.0.1 /home/max/.npm/ec149a27-pm2-1-0-1.lock
27 silly lockFile ec149a27-pm2-1-0-1 pm2@1.0.1
28 silly lockFile ec149a27-pm2-1-0-1 pm2@1.0.1
29 silly lockFile 616a5678-pm2-latest pm2@latest
30 silly lockFile 616a5678-pm2-latest pm2@latest
31 silly resolved [ { name: 'pm2',
31 silly resolved     preferGlobal: true,
31 silly resolved     version: '1.0.1',
31 silly resolved     engines: { node: '>=0.10' },
31 silly resolved     directories: { bin: './bin', lib: './lib', example: './examples' },
31 silly resolved     author:
31 silly resolved      { name: 'Strzelewicz Alexandre',
31 silly resolved        email: 'alexandre@keymetrics.io',
31 silly resolved        url: 'https://keymetrics.io' },
31 silly resolved     maintainers: [ [Object], [Object], [Object], [Object], [Object], [Object] ],
31 silly resolved     contributors:
31 silly resolved      [ [Object],
31 silly resolved        [Object],
31 silly resolved        [Object],
31 silly resolved        [Object],
31 silly resolved        [Object],
31 silly resolved        [Object],
31 silly resolved        [Object],
31 silly resolved        [Object],
31 silly resolved        [Object],
31 silly resolved        [Object],
31 silly resolved        [Object],
31 silly resolved        [Object],
31 silly resolved        [Object] ],
31 silly resolved     homepage: 'http://pm2.keymetrics.io/',
31 silly resolved     description: 'Production process manager for Node.JS applications with a built-in load balancer.',
31 silly resolved     main: 'index.js',
31 silly resolved     scripts: { test: 'PM2_CONCURRENT_ACTIONS=1 NODE_ENV=test bash test/pm2_programmatic_tests.sh && NODE_ENV=test bash test/pm2_behavior_tests.sh' },
31 silly resolved     keywords:
31 silly resolved      [ 'cli',
31 silly resolved        'fault tolerant',
31 silly resolved        'sysadmin',
31 silly resolved        'tools',
31 silly resolved        'pm2',
31 silly resolved        'logs',
31 silly resolved        'log',
31 silly resolved        'json',
31 silly resolved        'express',
31 silly resolved        'hapi',
31 silly resolved        'kraken',
31 silly resolved        'reload',
31 silly resolved        'microservice',
31 silly resolved        'programmatic',
31 silly resolved        'harmony',
31 silly resolved        'node-pm2',
31 silly resolved        'production',
31 silly resolved        'keymetrics',
31 silly resolved        'node.js monitoring',
31 silly resolved        'strong-pm',
31 silly resolved        'deploy',
31 silly resolved        'deployment',
31 silly resolved        'daemon',
31 silly resolved        'supervisor',
31 silly resolved        'nodemon',
31 silly resolved        'pm2.io',
31 silly resolved        'ghost',
31 silly resolved        'ghost production',
31 silly resolved        'monitoring',
31 silly resolved        'process manager',
31 silly resolved        'forever',
31 silly resolved        'profiling',
31 silly resolved        'probes',
31 silly resolved        'forever-monitor',
31 silly resolved        'keep process alive',
31 silly resolved        'process configuration',
31 silly resolved        'clustering',
31 silly resolved        'cluster cli',
31 silly resolved        'cluster',
31 silly resolved        'cron',
31 silly resolved        'devops',
31 silly resolved        'dev ops' ],
31 silly resolved     bin: { pm2: './bin/pm2', 'pm2-dev': './bin/pm2-dev' },
31 silly resolved     dependencies:
31 silly resolved      { async: '1.5',
31 silly resolved        chalk: '1.1.1',
31 silly resolved        chokidar: '~1.4.0',
31 silly resolved        'cli-table': '0.3.1',
31 silly resolved        'coffee-script': '~1.10.0',
31 silly resolved        commander: '^2.9',
31 silly resolved        cron: '1.1.0',
31 silly resolved        debug: '2.2.0',
31 silly resolved        eventemitter2: '0.4.14',
31 silly resolved        moment: '2.11.2',
31 silly resolved        nssocket: '0.6.0',
31 silly resolved        pidusage: '^1.0.1',
31 silly resolved        pmx: '^0.5',
31 silly resolved        vizion: '^0.2',
31 silly resolved        'pm2-axon': '~2.0.9',
31 silly resolved        'pm2-axon-rpc': '0.3.6',
31 silly resolved        'pm2-deploy': '0.2.1',
31 silly resolved        'pm2-multimeter': '0.1.2',
31 silly resolved        shelljs: '0.6.0',
31 silly resolved        semver: '~5.1.0',
31 silly resolved        mkdirp: '0.5.1',
31 silly resolved        ikt: 'git+http://ikt.pm2.io/ikt.git#master' },
31 silly resolved     devDependencies: { mocha: '2.x', should: '^8.1.1', 'better-assert': '^1.0.0' },
31 silly resolved     optionalDependencies: { ikt: 'git+http://ikt.pm2.io/ikt.git#master' },
31 silly resolved     bugs: { url: 'https://github.com/Unitech/pm2/issues' },
31 silly resolved     repository: { type: 'git', url: 'git://github.com/Unitech/pm2.git' },
31 silly resolved     license: 'AGPL-3.0',
31 silly resolved     readme: '<div align="center">\n  <a href="http://pm2.keymetrics.io">\n    <img width=710px src="https://github.com/unitech/pm2/raw/master/pres/pm2.20d3ef.png">\n  </a>\n\n<br/>\n<b>P</b>(rocess) <b>M</b>(anager) <b>2</b>\n<br/><br/>\n\n <a href="https://www.bithound.io/github/Unitech/pm2">\n <img src="https://www.bithound.io/github/Unitech/pm2/badges/score.svg" alt="bitHound Score">\n</a>\n\n<a href="https://www.npmjs.com/package/pm2">\n  <img alt="NPM Downloads" src="https://img.shields.io/npm/dm/pm2.svg?style=flat-square"/>\n</a>\n\n<a href="https://travis-ci.org/Unitech/pm2">\n  <img src="https://travis-ci.org/Unitech/pm2.svg?branch=master" alt="Build Status"/>\n</a>\n\n\n<br/>\n<br/>\n</div>\n\nPM2 is a production process manager for Node.js applications with a built-in load balancer. It allows you to keep applications alive forever, to reload them without downtime and to facilitate common system admin tasks.\n\nStarting an application in production mode is as easy as:\n\n```bash\n$ pm2 start app.js\n```\n\nPM2 is constantly assailed by [more than 700 tests](https://travis-ci.org/Unitech/pm2).\n\nOfficial website: [http://pm2.keymetrics.io](http://pm2.keymetrics.io)\n\nWorks on Linux (stable) & MacOSx (stable) & Windows (bÃªta).\n\n[![NPM](https://nodei.co/npm/pm2.png?downloads=true&downloadRank=true)](https://nodei.co/npm/pm2/)\n\n## Install PM2\n\n```bash\n$ npm install pm2 -g\n```\n\n*npm is a builtin CLI when you install Node.js - [Installing Node.js with NVM](https://keymetrics.io/2015/02/03/installing-node-js-and-io-js-with-nvm/)*\n\n## Start an application\n\n```bash\n$ pm2 start app.js\n```\n\nYour app is now put in background, monitored and kept alive forever.\n\n[More about Process Management](http://pm2.keymetrics.io/docs/usage/quick-start/#cheat-sheet)\n\n## Module system\n\nPM2 embeds a simple and powerful module system. Installing a module is straightforward:\n\n```bash\n$ pm2 install <module_name>\n```\n\nHere are some PM2 compatible modules (standalone Node.js applications managed by PM2):\n\n[**pm2-logrotate**](https://github.com/pm2-hive/pm2-logrotate) auto rotate logs of PM2 and applications managed<br/>\n[**pm2-webshell**](https://github.com/pm2-hive/pm2-webshell) expose a fully capable terminal in browsers<br/>\n[**pm2-auto-pull**](https://github.com/pm2-hive/pm2-auto-pull) auto pull all applications managed by PM2<br/>\n\n[How to write a module](http://pm2.keymetrics.io/docs/advanced/pm2-module-system/)\n\n## Update PM2\n\n```bash\n# Install latest pm2 version\n$ npm install pm2 -g\n# Save process list, exit old PM2 & restore all processes\n$ pm2 update\n```\n\n*PM2 updates are seamless*\n\n## Main features\n\n### Commands overview\n\n```bash\n$ npm install pm2 -g            # Install PM2\n$ pm2 start app.js              # Start, Daemonize and auto restart application\n$ pm2 start app.js -i 4         # Start 4 instances of application in cluster mode\n                                # it will load balance network queries to each app\n$ pm2 start app.js --name="api" # Start application and name it "api"\n$ pm2 start app.js --watch      # Restart application on file change\n$ pm2 start script.sh           # Start bash script\n\n$ pm2 list                      # List all processes started with PM2\n$ pm2 monit                     # Display memory and cpu usage of each app\n$ pm2 show [app-name]           # Show all informations about application\n\n$ pm2 logs                      # Display logs of all apps\n$ pm2 logs [app-name]           # Display logs for a specific app\n$ pm2 flush\n\n$ pm2 stop all                  # Stop all apps\n$ pm2 stop 0                    # Stop process with id 0\n$ pm2 restart all               # Restart all apps\n$ pm2 reload all                # Reload all apps in cluster mode\n$ pm2 gracefulReload all        # Graceful reload all apps in cluster mode\n$ pm2 delete all                # Kill and delete all apps\n$ pm2 delete 0                  # Delete app with id 0\n$ pm2 scale api 10              # Scale app with name api to 10 instances\n$ pm2 reset [app-name]          # Reset number of restart for [app-name]\n\n$ pm2 startup                   # Generate a startup script to respawn PM2 on boot\n$ pm2 save                      # Save current process list\n$ pm2 resurrect                 # Restore previously save processes\n$ pm2 update                    # Save processes, kill PM2 and restore processes\n$ pm2 generate                  # Generate a sample json configuration file\n\n$ pm2 deploy app.json prod setup    # Setup "prod" remote server\n$ pm2 deploy app.json prod          # Update "prod" remote server\n$ pm2 deploy app.json prod revert 2 # Revert "prod" remote server by 2\n\n$ pm2 module:generate [name]    # Generate sample module with name [name]\n$ pm2 install pm2-logrotate     # Install module (here a log rotation system)\n$ pm2 uninstall pm2-logrotate   # Uninstall module\n$ pm2 publish                   # Increment version, git push and npm publish\n```\n\n### Different ways of starting processes\n\n```bash\n$ pm2 start app.js --watch      # Restart application on file change\n$ pm2 start script.sh           # Start bash script\n$ pm2 start app.js -- -a 34     # Start app and pass option -a 34\n$ pm2 start app.json            # Start all applications declared in app.json\n$ pm2 start my-python-script.py --interpreter python\n```\n\n### Process management\n\nOnce apps are started you can list and manage them easily:\n\n![Process listing](https://github.com/unitech/pm2/raw/master/pres/pm2-list.png)\n\nListing all running processes:\n\n```bash\n$ pm2 list\n```\n\nManaging your processes is straightforward:\n\n```bash\n$ pm2 stop     <app_name|id|\'all\'|json_conf>\n$ pm2 restart  <app_name|id|\'all\'|json_conf>\n$ pm2 delete   <app_name|id|\'all\'|json_conf>\n```\n\nTo have more details on a specific process:\n\n```bash\n$ pm2 describe <id|app_name>\n```\n\n[More about Process Management](http://pm2.keymetrics.io/docs/usage/quick-start/#cheat-sheet)\n\n### Load balancing / 0s reload downtime\n\nWhen an app is started with the -i <worker number> option, the **cluster** mode is enabled.\n\nSupported by all major Node.js frameworks and any Node.js applications\n\n![Framework supported](https://raw.githubusercontent.com/Unitech/PM2/development/pres/cluster-support.png)\n\n**Warning**: If you want to use the embedded load balancer (cluster mode), we recommend the use of `node#0.12.0+` or `node#0.11.16+`. We do not support `node#0.10.*`\'s cluster module anymore.\n\nWith the cluster mode, PM2 enables load balancing between multiple application to use all CPUs available in a server.\nEach HTTP/TCP/UDP request will be forwarded to one specific process at a time.\n\n```bash\n$ pm2 start app.js -i 0  # Enable load-balancer and cluster features\n\n$ pm2 reload all           # Reload all apps in 0s manner\n\n$ pm2 scale <app_name> <instance_number> # Increase / Decrease process number\n```\n\n[More informations about how PM2 make clustering easy](https://keymetrics.io/2015/03/26/pm2-clustering-made-easy/)\n\n### CPU / Memory Monitoring\n\n![Monit](https://github.com/unitech/pm2/raw/master/pres/pm2-monit.png)\n\nMonitoring all processes launched:\n\n```bash\n$ pm2 monit\n```\n\n### Log facilities\n\n![Monit](https://github.com/unitech/pm2/raw/master/pres/pm2-logs.png)\n\nDisplaying logs of a specified process or all processes, in real time:\n\n`pm2 logs [\'all\'|\'PM2\'|app_name|app_id] [--err|--out] [--lines <n>] [--raw] [--timestamp [format]]`\n\nExamples:\n\n```bash\n$ pm2 logs\n$ pm2 logs WEB-API --err\n$ pm2 logs all --raw\n$ pm2 logs --lines 5\n$ pm2 logs --timestamp "HH:mm:ss"\n$ pm2 logs WEB-API --lines 0 --timestamp "HH:mm" --out\n$ pm2 logs PM2 --timestamp\n\n$ pm2 flush          # Clear all the logs\n```\n\n[More about log management](http://pm2.keymetrics.io/docs/usage/log-management/)\n\n### Startup script generation\n\nPM2 can generate and configure a startup script to keep PM2 and your processes alive at every server restart.  Execute the startup command only as the user to be running the PM2 daemon.\n\n```bash\n$ pm2 startup\n# auto-detect platform\n$ pm2 startup [platform]\n# render startup-script for a specific platform, the [platform] could be one of:\n#   ubuntu|centos|redhat|gentoo|systemd|darwin|amazon\n```\n\nTo save a process list just do:\n\n```bash\n$ pm2 save\n```\n\n[More about startup scripts](http://pm2.keymetrics.io/docs/usage/startup/)\n\n## Keymetrics monitoring\n\n[![Keymetrics Dashboard](https://keymetrics.io/assets/images/application-demo.png)](https://app.keymetrics.io/#/register)\n\nIf you manage your NodeJS app with PM2, Keymetrics makes it easy to monitor and manage apps across servers.\nFeel free to try it:\n\n[Discover the monitoring dashboard for PM2](https://app.keymetrics.io/#/register)\n\nThanks in advance and we hope that you like PM2!\n\n## More about PM2\n\n- [Watch & Restart](http://pm2.keymetrics.io/docs/usage/watch-and-restart/)\n- [Application Declaration via JS files](http://pm2.keymetrics.io/docs/usage/application-declaration/)\n- [PM2 API](http://pm2.keymetrics.io/docs/usage/pm2-api/)\n- [Deploying workflow](http://pm2.keymetrics.io/docs/usage/deployment/)\n- [PM2 and Heroku/Azure/App Engine](http://pm2.keymetrics.io/docs/usage/use-pm2-with-cloud-providers/)\n- [PM2 auto completion](http://pm2.keymetrics.io/docs/usage/auto-completion/)\n\n## CHANGELOG\n\n[CHANGELOG](https://github.com/Unitech/PM2/blob/master/CHANGELOG.md)\n\n## Contributors\n\n[Contributors](http://pm2.keymetrics.io/hall-of-fame/)\n\n## License\n\nPM2 is made available under the terms of the GNU Affero General Public License 3.0 (AGPL 3.0).\nFor other license [contact us](https://keymetrics.io/contact/).\n\n[![Analytics](https://ga-beacon.appspot.com/UA-51734350-4/Unitech/pm2?pixel)](https://github.com/Unitech/pm2)\n',
31 silly resolved     readmeFilename: 'README.md',
31 silly resolved     _id: 'pm2@1.0.1',
31 silly resolved     _from: 'pm2@latest' } ]
32 info install pm2@1.0.1 into /usr/local/lib
33 info installOne pm2@1.0.1
34 info /usr/local/lib/node_modules/pm2 unbuild
35 verbose tar unpack /home/max/.npm/pm2/1.0.1/package.tgz
36 silly lockFile a4481f10-r-usr-local-lib-node-modules-pm2 tar:///usr/local/lib/node_modules/pm2
37 verbose lock tar:///usr/local/lib/node_modules/pm2 /home/max/.npm/a4481f10-r-usr-local-lib-node-modules-pm2.lock
38 silly lockFile c8f8e24a-me-max-npm-pm2-1-0-1-package-tgz tar:///home/max/.npm/pm2/1.0.1/package.tgz
39 verbose lock tar:///home/max/.npm/pm2/1.0.1/package.tgz /home/max/.npm/c8f8e24a-me-max-npm-pm2-1-0-1-package-tgz.lock
40 silly gunzTarPerm modes [ '755', '644' ]
41 error Error: EACCES, mkdir '/usr/local/lib/node_modules'
41 error  { [Error: EACCES, mkdir '/usr/local/lib/node_modules']
41 error   errno: 3,
41 error   code: 'EACCES',
41 error   path: '/usr/local/lib/node_modules',
41 error   fstream_type: 'Directory',
41 error   fstream_path: '/usr/local/lib/node_modules/pm2',
41 error   fstream_class: 'DirWriter',
41 error   fstream_stack:
41 error    [ '/usr/lib/nodejs/fstream/lib/writer.js:171:23',
41 error      '/usr/lib/nodejs/mkdirp/index.js:37:53',
41 error      'Object.oncomplete (fs.js:107:15)' ] }
42 error Please try running this command again as root/Administrator.
43 error System Linux 3.19.0-25-generic
44 error command "/usr/bin/nodejs" "/usr/bin/npm" "install" "pm2@latest" "-g"
45 error cwd /home/max/Desktop/projects/bootcamp-grad-blog
46 error node -v v0.10.25
47 error npm -v 1.3.10
48 error path /usr/local/lib/node_modules
49 error fstream_path /usr/local/lib/node_modules/pm2
50 error fstream_type Directory
51 error fstream_class DirWriter
52 error code EACCES
53 error errno 3
54 error stack Error: EACCES, mkdir '/usr/local/lib/node_modules'
55 error fstream_stack /usr/lib/nodejs/fstream/lib/writer.js:171:23
55 error fstream_stack /usr/lib/nodejs/mkdirp/index.js:37:53
55 error fstream_stack Object.oncomplete (fs.js:107:15)
56 verbose exit [ 3, true ]
